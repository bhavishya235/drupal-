<?php
function bhavwidget_form_alter($form, $form_state, $form_id){
	echo "Form ID: $form_id";
}

function bhavwidget_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id) {  

	try{
		$query = "SELECT id,field_name FROM  field_config WHERE type = 'image'; ";
		$out=db_query($query);
		//WHAT IF NO ROW OF TYPE IMAGE??
		if(!$out)
		{
			throw new Exception("Database query failed::query->$query");
		}

		$id = array();
		$fn=array();

		while($record = $out->fetchAssoc()) {
			$id[]=$record['id'];
			$fn[]=$record['field_name'];
		}

		$req_id = $form['#field']['id'];

		foreach($id as $res)
		{
			if($req_id == $res)
			{
				$form['instance']['infosave'] = array(
						'#type' => 'checkbox',
						'#title' => t('Save information about the image in a file.'),
						'#default_value' => isset($form['#instance']['infosave']) ? $form['#instance']['infosave'] : FALSE,
						'#weight' => 2,
						);
				break;
			}
		}
	}catch (Exception $e) {
		echo 'Caught exception: ',  $e->getMessage(), "\n";
	}
}

function bhavwidget_node_presave($node)
{
	dsm("presave starts");
	//dsm($node);

	try{
		if($node->op == "Save")
		{
			$bundle = $node->type;
			$entity = "node";		
			$nid = $node->nid;

			$query=	"
				SELECT fci.field_name FROM field_config fc , field_config_instance fci WHERE  fci.field_id = fc.id  AND fc.type = 'image' AND fci.bundle = '$bundle' AND entity_type = '$entity';
			";
			$fields=db_query($query);
			if(!$fields)
			{
				throw new Exception("Database query failed::query->$query");
			}

			foreach($fields as $f)
			{
				//dsm($f->field_name);
				$field_instance = field_read_instance($entity,$f->field_name,$bundle);
				if(!empty($field_instance['infosave']))
				{
					//dsm("checked");
					$m = $f->field_name;
					$query = "
						SELECT fid
						FROM image_attributes
						WHERE nid =
						";
					if($nid == NULL) 
					{
						//	dsm($m);
						$var = $node->$m;
						foreach($var['und'] as $n)
						{//dsm($n['fid']);
							if($n['fid']!=0) getstat($n['fid']);
						}
						dsm(" all images under the above field added");
					}
					else
					{
						//ON EDIT CODE
						dsm("wait 4 sum time");
					}

				}
				else
				{
					//dsm("not checked");
				}
			}
		}
	dsm("presave ends");
	}catch (Exception $e) {
		echo 'Caught exception: ',  $e->getMessage(), "\n";
	}		
}


function getstat($fid)
{
	try 
	{
		$query ="
			SELECT uri
			FROM file_managed
			WHERE fid = '$fid';
		";
		$out=db_query($query);
		if(!$out)
		{
			throw new Exception("Database query failed::query->$query");
		}
		while($record = $out->fetchAssoc()) 
		{
			$uri=$record['uri'];			
		}

		$l=drupal_realpath($uri);

		$search = array(' ','(',')','$','*','?','#');
		$replace =  array('\ ','\(','\)','\$','\*','\?','\#');

		//HAVE A LOOK AT  "escapeshellcmd ( string $command )" for further use

		$l = str_replace($search,$replace,$l);

		$command= 'identify -format "%h\n%k\n%m\n%n\n%r\n%w\n%x\n%y\n%z\n%C\n%H\n%Q\n%[size]" ' . $l;	

		$output = array();
		//dsm(exec($command,$output));
		if(!exec($command, $output))
		{
			throw new Exception("Error in executing shell script command $command");
		}

		//dsm($output);

		$pieces = explode(" ", $output[6]);
		$reso_x= $pieces[0];
		$units= $pieces[1];

		$pieces2 = explode(" ", $output[7]);
		$reso_y= $pieces2[0];

		$size = filter_var($output[12], FILTER_SANITIZE_NUMBER_INT);

		$p= str_replace("image", "image_details", $l , $count=1);
		$len = strrpos($p,'.');
		$p = substr($p,0,$len);
		//$command2= 'cat '. $return . ' > ' . $p ;

		$cmd = "identify -verbose ".$l." > ". $p;
		exec("$cmd", $out2);

		$command2 = "cat " . $p;
		if(!exec($command2,$o))
		{
			throw new Exception("Error in executing shell script command $command2");
		}

		$return = ( "\n<pre>\n".join( "\n", $o )."\n</pre>\n" );
		//dsm($return);

		$start = strpos( $return, "Type:" );
		$type = substr( $return, $start );
		$length = strpos( $type, "\n" );
		$type = substr( $type,6, $length-5 );

		$db = db_insert('image_attributes')
			->fields(array(
						'uri'=> $uri, 
						'fid'=>$fid,
						'image_format'=>$output[2],
						'image_geomentry_height'=>intval($output[0]),
						'image_geometry_width'=>intval($output[5]),
						'image_resolution_x'=>intval($reso_x),
						'image_resolution_y'=>intval($reso_y),
						'image_size'=>$size,
						'image_type'=>$type,
						'image_colorSpace'=>$output[4],
						'image_units_type'=>$units,
						'image_compression'=>$output[9],
						'image_creation_date'=>strtotime("now"),
						'filepath'=>$p,
				      )
				)

			->execute();

	}catch (Exception $e) {
		drupal_set_message( 'Caught exception: ' . $e->getMessage());
		}
}
function bhavwidget_node_delete($node)
{
		dsm("delete starts");
		dsm($node);
		dsm("delete ends");
	
}	
